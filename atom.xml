<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lionhacks]]></title>
  <link href="http://guymorita.github.io//github/atom.xml" rel="self"/>
  <link href="http://guymorita.github.io//github/"/>
  <updated>2014-10-23T20:48:10-07:00</updated>
  <id>http://guymorita.github.io//github/</id>
  <author>
    <name><![CDATA[Guy Morita]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Objective-C vs Javascript vs Python]]></title>
    <link href="http://guymorita.github.io//github/2014/08/objective-c-vs-javascript-vs-python/"/>
    <updated>2014-08-10T13:08:00-07:00</updated>
    <id>http://guymorita.github.io//github/2014/08/objective-c-vs-javascript-vs-python</id>
    <content type="html"><![CDATA[<p>A little over a year ago I decided to learn how to code. I knew little to nothing about it other than the things I would be able to create and communicate once I knew. I remember diving into Ruby and asking myself &ldquo;what&rsquo;s the point of an array or a hash? how does this relate to building a site?&rdquo;. A couple weeks later I built tic-tac-toe in the console. But I started to hit the point where the learning curve was too steep and to expedite the process I attended Hack Reactor, a programming school in the bay area that focuses on getting talented young developers to a professional level.</p>

<p>Fast forward to now, I&rsquo;ve been a software engineer at Hipmunk for close to a year. I started working mostly in Coffeescript (compiles to Javascript) and have gradually moved to writing entirely Python. I also just finished Codepath which is another coding school and learned how to write Objective-C. I&rsquo;m writing this blog post to bring together my opinions on the languages:</p>

<h3>Debugging</h3>


<p>My friend&rsquo;s dad who is also a software engineer was giving advice to my friend for which IDE/Editor to use and his advice was to pick the one that makes debugging the easiest. I didn&rsquo;t fully understand why that was the most important thing until I started to code in Xcode/Objective-C&hellip; cause it&rsquo;s a pain in the ass. At least to start. Xcode will print out huge 50 line errors and you will have no clue what went wrong. On top of that, the interface is extremely opinionated and you basically are forced into doing everything the Apple way. I battled with it for a solid month before I started to appreciate the design patterns and language syntax. I would never recommend it as a first language for someone. Ruby/Python are very similar and equally easy to debug. That said, I think JS is the easiest only because of the Chrome debugger (built into Google Chrome). JS as a language is fairly ugly and clumsy, but for a newbie developer, the Chrome debugger makes it very easy to step through and interact with your code.</p>

<h3>Purpose</h3>


<p>A friend asked me yesterday which my favorite language is and my answer was that it depended on what I was building. I guess I don&rsquo;t have a favorite and I like them each for different reasons. Python is great for anything dealing with data related with libraries like NumPy/SciPy/Pandas making it very easy to munge, analyze and model data. Hipmunk&rsquo;s backend is built in Python and with many other startups such as Dropbox, Eventbrite, Mixpanel, Quora, Pinterest and Yelp to name a few. JS is the only language that lives in the browser. Meaning that most special animations, logic and features that make a site &lsquo;feel&rsquo; nice are done in JS. While it&rsquo;s not the prettiest langauge, it&rsquo;s extremely powerful and has now moved to backend as well with Node.js. Which is nice because it means you can share code between the front and back. Objective-C is currently only used for creating OSX and iOS apps.</p>

<h3>Strict typing</h3>


<p>Xcode (IDE) vs editor
Exceptions
Debugging
Intuitive
Python shortcuts</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning how to code - Why?]]></title>
    <link href="http://guymorita.github.io//github/2013/06/learning-how-to-code-why/"/>
    <updated>2013-06-12T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2013/06/learning-how-to-code-why</id>
    <content type="html"><![CDATA[After a year of being in SF, I never would have imagined that my path would put me here. It&#8217;s easily been one of the most inspiring and fulfilling years of my life. Before moving here, I had no frameworks for how a technology company was supposed to work or skills to build a product. Sadly, I was one of those that thought that developers were just the people who spoke a complex language (code) and who you told to build stuff. After having helped on the product side to launch a mobile game, contributing as a product manager to 3 mobile apps (one of them from concept to launch) pulling in over 20M in revenue, watching many of my close friends create successful companies/products from simple ideas and lastly having jumped into code myself, I now understand how fundamentally important having knowledge of code is for anyone looking to work in technology. In this post, I&#8217;d like to walk you through some of my driving thoughts in my decision to learn how to code and why I chose a bootcamp.
<h3>Being a better tech founder</h3>
It&#8217;s very hard to lead and build rapport with developers if you don&#8217;t understand what they&#8217;re doing. When I was running my web marketing company for three years I had a lot of need for development help. I could only handle html/css and the management of content management sites myself. For anything else I needed outside help. When I went to developers for help, I knew little to nothing about what they were saying or how the technologies worked. I didn&#8217;t know the fundamental difference between PHP/Javascript/Ruby/Java/C++ or any other. All I knew was whether or not a web service or program performed it&#8217;s job effectively. Apart from that, I couldn&#8217;t tell if a product/feature should take 2 weeks or 2 hours. I had no understanding of the technologies and thus also had little knowledge of what they were capable of. I thought working with developers was really frustrating because stuff often didn&#8217;t get built the way I had envisioned, roadblocks would seemingly appear out of nowhere to delay the project and things that I thought should be fast often took forever.

Given that I want to start more technology companies in the near future, I have made it mandatory in my mind to learn how to code. If in 5-10 years, I didn&#8217;t have a strong understanding of it, I would have some regret. I want to have a fundamental understanding of what technology products are doing and why decisions are made the way they are. I want to be able to work hand-in-hand with developers to help them think through technology problems and not just be the &#8220;business guy&#8221;, no pun intended. I want to be able to call out a developer if they say something is going to take 2 weeks when it should take 2 hours. Not for the sake of calling them out but to help work out better solutions together and to be on the same page. I am absolutely certain that learning how to code will make me a better tech founder.
<h3>Being a better product manager</h3>
Product management is like running a mini-company in the form of a product. It&#8217;s nice to be able to focus fully on just the product. You don&#8217;t have to deal with all the miscellaneous tasks that can take a lot of time as a founder. Like recruiting, accounting, office logistics, fundraising, customer service, having no salary, etc. And even at that, I&#8217;d say product management is on par with running a company in terms of difficultly although much lower in terms of stress level.

One of my big takeaways from being a product manager without a coding background was that I didn&#8217;t know what features were possible. I remember working with our lead mobile designer who would come up with an awesome new interface which made the app feel much cleaner and modern. I&#8217;d then bring in the engineering team only to find out it wasn&#8217;t possible for 3-4 listed reasons of which none of them we fundamentally understood. To me you can only get so far with asking &#8220;why&#8221; before you&#8217;re just building concept over concepts over concepts. Without having a technical background, it&#8217;s impossible to fully understand the constraints through which to guide the product.

To me, a tech founder or PM that can&#8217;t code is like a restaurant owner that can&#8217;t cook. While it&#8217;s not necessary to do the role, many of the most successful restaurateurs started off as great chefs. Without learning how to cook amazing food it&#8217;s hard to develop the palette to differentiate between bad from good, or good from great.
<h3>Being a developer and having the ability to build products myself</h3>
Have you ever had an idea or service that you thought could be great but you didn&#8217;t couldn&#8217;t do it yourself? I&#8217;m sure we all have. One of your first thoughts was probably, &#8220;yeah that would be awesome, but who could actually build it? how much would it cost to get it built? what if the project didn&#8217;t work out? i&#8217;d be out thousands of dollars,&#8221; or something on those lines. I&#8217;ve had plenty of these too and while it could be answered with getting a technical co-founder, for me it would be even more satisfying to be able to build things myself. I&#8217;ve been through startup weekends where people build fully functional web apps that could bring in revenue in one short weekend. With all of the huge growth of collaboration in open-source software, the &#8216;magical&#8217; frameworks and Heroku/AWS, it feels like it&#8217;s very quickly moving to a world where you can go from idea to viable application / MVP in a manner of days/weeks. I want to be able to bring my ideas to life through my own doing.

<a href="http://www.lionhacks.com/wp-content/uploads/2013/06/6951505066_f41c9a1b8d_o.jpg"><img class="alignright size-medium wp-image-247" alt="6951505066_f41c9a1b8d_o" src="http://www.lionhacks.com/wp-content/uploads/2013/06/6951505066_f41c9a1b8d_o-300x225.jpg" width="300" height="225" /></a>
<h3>It&#8217;s an awesome learning experience</h3>
If you&#8217;re like me and you voraciously love to learn new things, coding is really fun to learn. I didn&#8217;t think I would enjoy it as much as I do but it&#8217;s really cool to see your ideas become real functioning things with a few lines of code. I built a game of tic-tac-toe and a functioning blog site each in under an hour with very limited knowledge. While they probably aren&#8217;t clean in term of code, it&#8217;s crazy how much can be built in so little time. Even crazier is how a little idea can turn into a few thousand lines of code which can then be spread to millions of people. Some amount of work you do can be distributed and experienced by people all over the world in a manner of seconds. Most industries and lines of work can&#8217;t really touch that.

Coding teaches you to be a better problem solver. In test-driven development you basically write tests that you want your code to pass before you even begin coding. By doing this you&#8217;re setting a definite endpoint and are then letting yourself loose to try and figure it out. There are many ways to get to the end but at the start it&#8217;s often opaque as to how to get there. Coding forces you to go about your thoughts in a very organized and productive manner. You can&#8217;t just wing it with coding. Things don&#8217;t just fall into place. You have to deliberately will thousands of small pieces together to create something usable.

It also teaches you to be more detail oriented. You can&#8217;t be sloppy when you code. The computer (depending on the language) isn&#8217;t forgiving when you make mistakes. When you&#8217;re first learning, you can&#8217;t just glance at code and understand it. Nor can you just fly through the documentation and understand everything. You have to really look at it and understand every symbol in the code. Missing a semi-colon or a bracket can break the entire app.
<h3>Why I chose to do a bootcamp</h3>
My decision to dedicate the next 6 months to learning how to code and building some awesome products wasn&#8217;t a very hard decision after my thought process above, but why did I choose to do so through a bootcamp? In short, I can&#8217;t think of  a more effective way to learn a skill with such a steep learning curve. Coding is not easy. While it might be easy to go on CodeAcademy or the Michael Hartl Rails tutorial, you aren&#8217;t really learning how to be a good software engineer. Every time you get stuck you have to revert to forums and other stuff online that might not even solve the problem or fully answer your question. On top of that, you don&#8217;t know what you don&#8217;t know. Sure, maybe you can build a blog that has some cool features. But what if those features took you 10x longer than they should&#8217;ve because of a simple lack of knowledge. Not only that, but it&#8217;s hard to sit a computer that much learning by yourself if/when you get stuck.

I want to be at a professional level of development in the next 6 months and I don&#8217;t think I could get there through self study. While I consider myself a motivated person, I don&#8217;t think I&#8217;m disciplined or talented enough to get to a professional level by myself in 6 months. I want mentorship, direction and instruction. And a lot of it. Bootcamps provide massive amounts of structure to the learn processes necessary to get to a professional level by the end of the program. They are led by people that have been coding for 5-10 years and who love to teach. Anytime you get stuck, you can get a detailed answer/explanation to the issue you&#8217;re having within minutes. Instead of getting discouraged from being stuck, you get to work amongst 20+ other peers who are working through the same problems and growing with you. Instead of not knowing what you don&#8217;t know, you&#8217;ll have most the things that you need to know laid out.

After deciding to do a bootcamp my next challenge was to figure out which bootcamp. I knew I wanted to stay in SF so there 5 main choices. The top 3 in my mind in terms of career prospects were Dev Bootcamp, App Academy and Hack Reactor. Dev Bootcamp filled up through the beginning of 2014, App Academy I had a really bad application process with (involving emailing them without responses 4 times weeks/months before applying only to find out when I did the final admissions hoop that the cohort was already full) and Hack Reactor which I initially couldn&#8217;t apply to because their form kept failing (possibly due to my browser plugins?). The other options were HackBright which is women only and General Assembly whose program was very new to the bay. Given that the top 3 looked out of reach, I went through with GA&#8217;s in hopes that it could be as intense and successful as the other ones. Upon my first days of being in GA&#8217;s immersive web development program I immediately felt it was not the place for me. I was looking for something far more intense, that asked for more commitment from students and something that was much more outcome driven. After realizing that I wanted to leave the program, I started scrambling for ways to get into other programs and ended up emailing the founders of Hack Reactor to see if they had any spots open. After jumping through a chat application challenge and a couple coding/technical interviews, I am now extremely excited to be starting at Hack Reactor on June 17th! Their track record for creating hirable software engineers at a professional grade is unmatched. They demand more dedication from students than any other program. It is 6 days a week, 12-14 hours/day. Sometimes it&#8217;s scary thinking about that much time commitment, but I just remember that if I&#8217;m going to do anything it&#8217;s worth doing it well. And if I&#8217;m going to dedicate the next 3 months into learning how to code, I might as well go all in.

With that I will leave you. I hope it was interesting to walk through my thought process of deciding to learn to code. Many people have said that it&#8217;s backwards to learn how to code after I&#8217;ve run a company and worked in product management but I think it&#8217;s quite the contrary. I see it as a very central dot that will connect to many opportunities in the near future. For anyone interested, I&#8217;m going to try to keep a daily blog of the bootcamp experience <a href="http://guymorita.tumblr.com/">here</a>.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jiro Dreams of Sushi is a must see for documentary lovers]]></title>
    <link href="http://guymorita.github.io//github/2012/09/jiro-dreams-of-sushi-is-a-must-see-for-documentary-lovers/"/>
    <updated>2012-09-05T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/09/jiro-dreams-of-sushi-is-a-must-see-for-documentary-lovers</id>
    <content type="html"><![CDATA[<a href="http://www.lionhacks.com/wp-content/uploads/2012/09/sushi.jpg"><img class="alignright size-medium wp-image-205" title="sushi" src="http://www.lionhacks.com/wp-content/uploads/2012/09/sushi-300x168.jpg" alt="" width="300" height="168" /></a>Last night I watched the Jiro Dream of Sushi documentary which has been highly acclaimed by both my friends and other review sites. So what&#8217;s so unique about his sushi over others? For starters, you must make reservations months in advance and the food starts at ¥30,000 ($300). However, this is not for the sake of eliteness or exclusivity, rather it&#8217;s due to extremely high demand. After all, it was the first sushi restaurant with a Michelin Star rating and was recognized by the Japanese government as a living national treasure. His sushi is regarded as levels about any other. At 85, he still comes into work every single day of the week full of energy and loves his work. A feat few can match.

The documentary made a profound impression on me as I tried to see through to his essence. Beneath the art form of sushi and his 70+ years of dedication to his profession, he&#8217;s an artist much like Steve Jobs. He takes extreme care in looking over every aspect of the sushi which comes down to the ingredients, preparation, his team, restaurant ambience, and even the gender and placement of the guests. He&#8217;s spent so much time practicing Kaizen (constant, never-ending improvement) that each of the ingredients require a lifetime of expertise to even know if they&#8217;re of the right quality. His tuna vendor only selects the best from that week&#8217;s single best catch and if there is nothing of high enough grade, he won&#8217;t send anything to Jiro. His rice vendor only delivers to Jiro and when approached by the Hyatt with a very nice offering he replied, &#8220;Why would I sell to you? You don&#8217;t know how to make it right.&#8221; All of Jiro&#8217;s vendor relationships are based on mutual benefit not just for each other, but for delivering high quality to the end user, the customer. Quality is always first.

One of my favorite quotes from Jiro was, &#8220;in order to make delicious food, you must eat delicious food&#8221;. Jiro went further to say:
<blockquote>Quality of ingredients is important, but you need to develop a palate capable of discerning good and bad. Without good taste, you can&#8217;t make good food. If your sense of taste is lower than that of the customers, how will you impress them?</blockquote>
This speaks to any field of interest. You need to spend enough time with it to be able to detect, taste and smell all the subtleties in the art. That is the only way to become the best at it. Whether that&#8217;s with computer devices as Jobs did, with sushi as Jiro did or with basketball as Michael Jordan did. A little bit of raw talent doesn&#8217;t hurt either.

I really enjoyed this movie and I&#8217;d highly recommend it to any who wants to step into the shoes of a master at his craft.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In 7 days... Created a team, Built a working app in 24 hrs, Won Startup Weekend and Pitched at DEMO]]></title>
    <link href="http://guymorita.github.io//github/2012/04/in-7-days-created-a-team-built-a-working-app-in-24-hrs-won-startup-weekend-pitched-at-demo/"/>
    <updated>2012-04-22T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/04/in-7-days-created-a-team-built-a-working-app-in-24-hrs-won-startup-weekend-pitched-at-demo</id>
    <content type="html"><![CDATA[The last 7 days were a complete whirlwind of entrepreneurship, team building, game design, mentorship, networking, emotional highs, and of course, no sleep. What began with my friend, Jonathan Fung, coaxing me to cancel my flight home and instead participate in <a href="http://startupweekend.org/">Startup Weekend</a>, ended with one of the best entrepreneurial experiences/exercises I&#8217;ve had in my life. What was most different about this one than all the others was the level of camaraderie and synergy that we had amongst our team. It&#8217;s great to work with people that work as hard as you do and care just as much about the success of a project/company/idea. In this post I hope to take you through the roller coaster that was the last 7 days and some of my lessons learned.
<h2>MEGA Startup Weekend:</h2>
SW is a 54-hour event where developers, artists, entrepreneurs and marketers combine their talents to pitch ideas for startup companies, form teams around those ideas, build prototypes/demos, and finally pitch it as a business on Sunday evening. Our event was called MEGA Startup Weekend because of the 120 cities they host the event in, this one was the biggest. Over 300 people signed up for 3 different verticals: Gaming, Mobile, and Robotics. Even despite how cool it sounds I can honestly say I had no idea what to expect going in. And I would not have signed up if my friends hadn&#8217;t pushed me. I&#8217;m going to go into a lot of detail about each step of the whole process so if it gets a little dry, feel free to skip to the next section.

The first day of the event was Friday which is where we all divided up into our verticals and got the opportunity to pitch an idea to try and build a team. In the gaming vertical there were probably over 30 game ideas pitched ranging from a Code Battle (learn to code by battling against your friends), Bet on anything with friends, Pirate Booty (pirate game with a mario type view), Productivity games, Zombie game (a  play on zombie games where instead you are the zombies attacking the people) and an Eskimo game (kinda like angry birds but multiplayer and you launch eskimos instead of birds). Nathan, my roommate, pitched an idea for apples-to-apples on the phone which didn&#8217;t get any fan fare. And my idea for a game similar to Joust which featured music instead of visuals also got voted out. When it came time for everyone to form teams around the winning ideas, there were many which I was interested in trying, but none really jumped out as being amazing. Charles, a guy whose idea also got voted out, approached Nathan about developing the apples-to-apples idea. I soon joined and we began to work through the idea. We soon realized we needed more development help so we began looking for any developers that hadn&#8217;t yet been taken. Fortunately we were able to poach our fourth and final teammate, Nikola, from another team. The founding team was now born!

We quickly got to work figuring out what we wanted to get done in next 48 hours. After all, we had to create a business/vision, build an app, and pitch it by Sunday evening. We began looking at each our skill sets and strengths to divide up tasks. Charles had a computer science degree from Berkeley and tons of coding experience so he was our lead developer / product manager. Nikola had a computer engineer with back-end experience so he was to build the architecture and back-end of the game. Nathan had experience in IT consulting and a background in finance so he was the project manager. I had experience building my own web design/marketing company so I took a business and UI/UX/design role. After we decided on roles it was now time to actually get started!

On Saturday we showed up nice and early to get started. Charles even brought an extra monitor to help boost productivity. To do mockups/wireframes of our app I used balsamiq which was an easy way to create designs/frame for the developers and designers to use in collaboration. Charles began pounding away at coding the android app and Nikola started on the back-end. Nathan began to plan our the pitch and started collaborating with mentors. We kept pounding away every hour and to my amazement, we made significant progress.

It wasn&#8217;t until Saturday afternoon that I realized what we had was pretty special. Not only did we have a pretty cool idea, but our team had more synergy than any I had worked on before. We all knew our roles and we since we were all working so hard at them, it seemed like things were getting done very quickly. I finished the wireframes and design elements (buttons, backgrounds) and built our website by the end of the afternoon. Charles had most of the front-end functionality done by the evening. And we had received amazing advice from probably a dozen or so mentors that came by our table. Almost all the mentors had direct experience in building games, investing in games, or some other computer/gaming field. Those small tidbits of advice we got early on Saturday were no doubt essential parts of our eventual success. One of the mentors Adeo Ressi, advised us on some monetization strategies based on consumables/power-ups and also on making sure that we all dressed up as a team. Tony Parisi, Scott Foe, and Aaron Cammarata helped to work through our business model, go-to-market strategy, and presentation form.

Despite all of our hard work we were still no where near finished by the time they kicked us our of the Microsoft Campus at midnight. We decided to keep coding away at Charles&#8217;s place and it wasn&#8217;t till 5am that we were finally able to get the app working and get some much needed sleep.

By Sunday we came onto the Campus looking more like zombies than people. Nathan&#8217;s contacts were glued to his eyes and I was growing a beard. But alas, this was the final stretch. As the day went on our team began to realize that while our game was awesome, it was still not quite awesome enough to win. It needed a bigger vision/idea. It needed a business and a company behind it. It wasn&#8217;t till we started preparing to do our pitch that Charles came up with the game changer. The platform on top of the game. A vision for a new way of photo sharing. Completely unexplored.

Then came time to actually pitch. There were about 15 teams in our category and 5 judges with experience building gaming companies and investing in them. Nathan and Charles led the pitch and I led the demo of the app. Overall it went off very well and the judges couldn&#8217;t poke any large holes into our plan, given that we&#8217;d only had 48 hours to work it. When it came time to announce the winners our team had a very strong feeling that we had a chance to win. So I got our lucky hats that we had presented with ready. With our category they announced that it was a toss up between two teams so the brief excitement with our team being announced was quickly thrown off because we weren&#8217;t sure if we had one. Luckily, they called out our name &#8220;Stinky da Vinci&#8221; and the rest is history! Thank you to all the folks that put on Startup Weekend!

[AFG_gallery id=&#8217;1&#8217;]
<h2>Why our team did so well:</h2>
As cliche as it sounds, synergy. I grew a much better understanding of the word after this weekend. First, our team had a very solid vision of what we wanted to build and the components that would make it compelling. This can&#8217;t be fabricated. If our idea had been less novel / interesting / value-adding, the vision would&#8217;ve been aimed much lower and therefore less powerful. Second, we all knew what roles we needed to play and since we were such a small team, there weren&#8217;t any politics. I&#8217;m now convinced that team/office politics are one of the worst poisons out there. Hard to fix and lethal to a productive/positive culture. Third, openness. All of us knew that we all wanted to build the best product possible and a company that could actually succeed whether or not we won the competition. Because of this, we weren&#8217;t afraid to lower our pride if a better idea or suggestion came about. Fourth, hard work. We all slaved away on the project and burned through the midnight oil as a team. Even if you don&#8217;t totally like someone you&#8217;re working with, it&#8217;s much easier to respect them if you know that they work their ass off and create good work. All of us created good work and added to what ultimately became the game and company.
<h2>DEMO:</h2>
After 54 hours of sleep deprivation we found out we would not be getting much sleep for another 72-96 hours because we had to pitch at the DEMO conference. I had initially expected to be done with Startup Weekend on Sunday and fly back to Seattle Monday at 7am but now I had to once again cancel the flight! Though this one wasn&#8217;t too hard of a decision to make. If you&#8217;re wondering what DEMO is, it&#8217;s a very well known launchpad for emerging technologies. Some of the famous successes include E-Trade, Salesforce.com, TiVo, VMware and WebEx. Companies that get selected to pitch have 6 minutes to show off their latest/greatest technology in front of an audience of angel/venture capital investors and press from around the globe. Though we weren&#8217;t looking for funding it was still an amazing opportunity to network with investors/press and just to be in the middle of so many innovations!

One of the standout technologies was a company called <a href="http://tourwrist.com/">TourWrist</a> which is basically an iPad app that gives you a 360 view of picture. Almost as if you&#8217;re reliving that moment in time. It&#8217;s amazing stitching technology and solid UI made it really stand out. I believe it&#8217;s free so I would urge anyone with an iPad or iPhone to check it out. You won&#8217;t be disappointed. Over the last two days I must have watched pitches from over 60 companies with a wide range of coolness and potential. Here are a some of my thoughts:
<ul>
	<li>Great presentation skills can make all the difference. Toopher was a company which allowed for secure authentication to your mobile phone. Doesn&#8217;t sound like the most interesting topic right? However the Founder/Speaker did a great job of adding in tons of humor, self-deprecation and ended by grinding up competitors products in a blender (literally). Needless to say he fully engaged the audience and made them <em>feel</em> his message.</li>
	<li>While there were tons of breakout technologies, there were also tons of companies that seemed to solve a problem that didn&#8217;t exist. Or identified a problem that existed and built an irrelevant tool. One such example was a website which helped job seekers find jobs based on semantically understanding their resume and matching their Myers-Briggs with that of the job. First of all, job hunting is a pain in the ass and sucks not because companies don&#8217;t get enough resumes, but because companies don&#8217;t have the people that they want to hire in their immediate network. Most companies would always prefer to hire someone based on a recommendation from an employee or friend. It&#8217;s validation. And it stands on the integrity of the person making the recommendation. Second, the Myers-Briggs while in principle might be nice, is a pretty crude way to match people up for a job.</li>
	<li>Many companies, especially in the consumer space identified a problem and made a decent solution, but didn&#8217;t focus on the true business problem with consumer focused technology which distribution and adoption. One such example made a new DVR blending high quality, high storage capacity and a kitchen sink. To me, this is the typical &#8220;new&#8221; technology which has a bunch of new features, faster, cooler/sleeker, etc. But especially in this industry, the question is how are you going to distribute? Does the consumer actually want cooler, faster, more storage? Tons of companies flood into the TV/DVR space and few have had any success because they can&#8217;t get the consumer to actually adopt it. Google TV is going to make a run at the TV space as well.</li>
	<li>In this era, beautiful design/UI is essential. In fact, if your product is designed well enough, with solid aesthetics, and a simple UI, the product can do all the marketing for you. While Instagram isn&#8217;t exactly a business model, this was at the core of their success. Many companies had beautiful UI&#8217;s such as TourWrist, NotesCloud, DealAngel and Edamam.</li>
</ul>

These were some of the key areas that I thought separated the companies that had potential from the rest of the herd. And this is only a critique on their 6 minute presentation, I&#8217;m sure all of the companies could go more in depth on how they plan to approach their weaknesses. Here is a brief list of my favorites:
<ol>
	<li><a href="http://tourwrist.com/">TourWrist</a> - 360 imaging for iPad and iPhone. It&#8217;s really slick.</li>
	<li><a href="http://www.zboardshop.com">ZBoard</a> - World&#8217;s first, weight-sensing electric skateboard. Basically Segway meets skateboard, it&#8217;s pretty sweet.</li>
	<li><a href="https://www.toopher.com/">Toopher</a> - Location based authentication to mobile phone</li>
	<li><a href="http://www.dozuki.com">Dozuki</a> - Easily create and share instructions / documentation</li>
	<li><a href="http://www.fusionio.com">Fusion-io</a> - Extremely efficient and cost effective new hardware innovations</li>
</ol>
The other half of DEMO was about the networking! After the sessions investors and press were able to network with all the companies. Our booth was setup on the wall by the entrance and we had the pleasure to meet investors, press, and tons of entrepreneurs from around the globe. DEMO did a great job producing the whole event with nothing really going wrong. And plenty of open bars =)

Thank you to the Startup Weekend team, Ahmed, Aaron, Marc, Franck, Claire and anyone else who I missed. Also, thanks to the DEMO team for putting on a great show!]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lessons from a young entrepreneur (Part 2 of 3)]]></title>
    <link href="http://guymorita.github.io//github/2012/03/lessons-from-a-young-entrepreneur-part-2-of-3/"/>
    <updated>2012-03-31T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/03/lessons-from-a-young-entrepreneur-part-2-of-3</id>
    <content type="html"><![CDATA[<div>

Continuation from <a href="http://www.lionhacks.com/2012/03/lessons-from-a-young-entrepreneur/">Part 1</a>
<h2>Management is an entirely different world than being a technician</h2>
</div>
As I read in one of my favorite books, “The E-Myth Revisited” by Michael Gerber, we all have three personalities within ourselves – a technician, a manager, and an entrepreneur. The technician knows how to do the technical work of the business like baking pies, building websites, or tuning an engine. The manager knows how to monitor and organize the team/projects. The entrepreneur creates a vision and builds the business.

While the technical work is relatively straight forward, the managerial work is much more subjective and soft. Getting an employee to like you is relatively easy but getting an employee to consistently, happily carryout a project and never-endingly work towards the company’s benefit is an entirely different world. There is an infinite number of factors that go into being a good manager and no one is perfect. If I could list a few important factors it would be high integrity, timeliness, great communication, optimism, ability to make decisions despite ambiguity and a good listener. In my brief experience, I found that it was far more important for the team to respect me, than to like me. As long as I clearly communicated to them that my actions were in the best interest of the company and therefore in their job security. I’m pretty sure mastering the art and science of management will be a lifelong endeavor.
<div>
<h2>Invest back into the company</h2>
</div>
2010 was a relatively good year for the company financially. In fact the margins were so high that I thought the company was extremely successful. Higher margins are good right? Yes, however what I didn’t realize was that by keeping the margins high, I was taking away from how much better the service could have become. It was an opportunity cost to creating higher customer lifetime value.

With our margins at 30%+ we were creating cash flow; however we could have greatly increased the level of customer satisfaction if we had reinvested another 15%. Had I realized this before, I would’ve kept the margins at a safe enough level to survive and reinvested the rest back into the company instead of letting it sit in the company bank account. That said, when you&#8217;re bootstrapping a company it will feel like you need to cling to every penny.
<div>
<h2>Integrity is everything</h2>
</div>
For the early part of my life this word has had a purely theoretical meaning. After receiving my black belt in Tae Kwon Do I remember it as one of the Five Tenets (codes of conduct), but even then it was just another check on the list.

Integrity is everything. Both in terms of self-trust and in terms of choosing team members who also operate with high integrity. Integrity on a personal level is being able to trust that you will carry out the things you say in your head. On the smallest level, it&#8217;s going to bed on-time and getting up on time. If you can&#8217;t actually carry out what you say you want to do, it will continually lower your self-trust. Can you will yourself to go to the gym 3 days a week? Can you quit smoking? Can you eat healthier? Can you trust yourself to do the things you say you will do? It&#8217;s a very important question. It might also help to look at it from the perspective of the three brains, as I mentioned in <a href="http://www.lionhacks.com/2012/03/lessons-from-a-young-entrepreneur/">Part 1 about psychology</a>. Remember that if we were completely rational beings, we would go to bed at the ideal time, wake up at the ideal time, eat perfectly, go to the gym 3-4 days a week, work hard at work, cut everything off after work and be super happy all the time. Unfortunately, we aren&#8217;t completely rational. We have 3 brains to deal with, not just one. And learning how and when your reptilian/emotional brains are working against you is important. The logical brain knows you should eat broccoli instead of potato chips because you will have better energy and it&#8217;s extremely good for you, it&#8217;s the reptilian/emotional brains that want the high that comes from the texture and taste of the chip. This relates to integrity just because you have to recognize when the reptilian/emotional brains are taking over and you&#8217;re not being logical or operating with integrity.

Integrity is the core of business. Choose team members that have lots of integrity. This may seem soft or not applicable until you look at the opposite. Imagine a team where you couldn&#8217;t trust anyone to do what they said, get it done on time or to the standards you wanted. How would your output be? Pretty terrible right? The ability to trust that you can carry out your own desires and the ability to trust the words of another is priceless. If you can’t fully trust your team to carry out what they promise on-time; missed deadlines, finger-pointing and a lot of uncomfortable conversations are sure to follow. This carries the exact same effect with dealings with clients.
<div>
<h2>Get comfortable being uncomfortable</h2>
</div>
As an entrepreneur I quickly found myself in tons of uncomfortable positions. Some examples might be the uncertainty of a new project/marketing campaign, an uncomfortable conversation with a team member, or new long-term lease to be signed. Calculate the risk of the project/campaign, have the uncomfortable conversation sooner than later, and talk to mentors/lawyers about the lease. Find as much information as you can about the situation, manage/mitigate the risks, and finally make a decision acknowledging that while you did as much research as you could, you have incomplete data. On a daily basis I had to make decisions based on 60% certainty. There is rarely a perfect answer. Nothing is certain, especially in business. Just like setting out to create a business, the most important part is the decision and action to start. Situations won’t solve themselves with time, especially if you’re CEO.

One of the biggest pieces of ambiguity I had to overcome was whether the company would succeed or fail. Rather than trying to convince myself it would succeed, I completely accepted that it was uncertain, dedicated myself to doing everything possible to help is succeed and accepted the results. Being afraid of failure and being attached to success brings nothing but unnecessary stress.

Many people that talk about starting companies but don&#8217;t end up following through don&#8217;t truly understand that often times in entrepreneurship starting is more important than planning. Take action now. If you have an idea, create an name for it Monday. Buy a domain on Tuesday. Research all the companies in the industry Wednesday through Friday. Take action now. Today. Not plan. If you think more planning is going to make the future more certain, it&#8217;s just an illusion. Planning in entrepreneurship is often only useful as an exercise. The business model will likely change many many times over the development of the company. Build a solid team and vision, and like Columbus, set sail west.
<div></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Morning Blueberry Smoothie]]></title>
    <link href="http://guymorita.github.io//github/2012/03/my-morning-blueberry-smoothie/"/>
    <updated>2012-03-23T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/03/my-morning-blueberry-smoothie</id>
    <content type="html"><![CDATA[<a href="http://www.lionhacks.com/wp-content/uploads/2012/03/blueberries.jpg"><img class="alignright size-medium wp-image-102" title="blueberries" src="http://www.lionhacks.com/wp-content/uploads/2012/03/blueberries-300x225.jpg" alt="" width="300" height="225" /></a>Most of you that know me, know that I&#8217;ve had the same breakfast for the past 9 months. I believe that a good morning and breakfast sets you off right to have a good day and week. If you put the right nutrients in your body at the start of the day, you&#8217;ll feel much sharper and have smoother, consistent energy throughout the day, trust me =) Below is my original recipe and it&#8217;s newest evolution, V4.0.
<h1>Original Recipe:</h1>
<h3>(actually tastes good! ask anyone that&#8217;s tried it)</h3>
I blend mine in a <a href="http://www.amazon.com/gp/product/B002JM2V9K/ref=as_li_tf_tl?ie=UTF8&amp;tag=liohac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B002JM2V9K">Euro-Pro Ninja Master Prep Blender and Food Processor, Blue</a><img style="border: none !important; margin: 0px !important;" src="http://www.assoc-amazon.com/e/ir?t=liohac-20&amp;l=as2&amp;o=1&amp;a=B002JM2V9K" alt="" width="1" height="1" border="0" /> which gets the job done quickly and makes for an easy clean up. But any blender will suffice.
<ul>
	<li>One cup of frozen blueberries
<ul>
	<li>Organic preferred but obviously more expensive. In seattle, costco has a great deal of $14 for 5lbs of blueberries. Very hard to beat. In SF, the best I can find is $12 for 3lbs.</li>
	<li>Named one of the top 10 superfoods. They are packed with antioxidants and are extremely beneficial for your brain. Click <a href="http://www.womenfitness.net/blueberries.htm">here</a> for a brief list of benefits.</li>
</ul>
</li>
	<li>One banana</li>
	<li>One scoop of protein powder
<ul>
	<li>I use Syntha-6 Cookies-N&#8217;-Cream which seems to mix in well as a smoothie. I&#8217;d be very careful with the flavor you choose, chocolate probably won&#8217;t bod well.</li>
	<li><a href="http://www.amazon.com/gp/product/B000GP5HJI/ref=as_li_tf_tl?ie=UTF8&amp;tag=liohac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000GP5HJI">BSN Syntha-6 Protein Powder, Vanilla Ice Cream, 2.91 Pound</a><img style="border: none !important; margin: 0px !important;" src="http://www.assoc-amazon.com/e/ir?t=liohac-20&amp;l=as2&amp;o=1&amp;a=B000GP5HJI" alt="" width="1" height="1" border="0" /></li>
</ul>
</li>
	<li>One scoop of pro-biotic green&#8217;s mix
<ul>
	<li>Improves energy and endurance, strengthens immunity, improves digestion and circulation. And there are tons of secondary benefits.</li>
	<li><a href="http://www.amazon.com/gp/product/B000NDME6C/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;tag=liohac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000NDME6C">Vibrant Health Green Vibrance Family Size Power - 60 Day Supply, 25.4-Ounce</a><img style="border: none !important; margin: 0px !important;" src="http://www.assoc-amazon.com/e/ir?t=liohac-20&amp;l=as2&amp;o=1&amp;a=B000NDME6C" alt="" width="1" height="1" border="0" /></li>
</ul>
</li>
	<li>One cup of almond milk
<ul>
	<li>I use almond milk because I&#8217;m lactose intolerant. But it would probably go just as well with regular milk or soy. I use Silk&#8217;s Pure Almond Original.</li>
</ul>
</li>
	<li>One cup of filtered water</li>
	<li>Nine ice cubes
<ul>
	<li>Gives it the smoothie thickness.</li>
</ul>
</li>
</ul>
<h1>Morning Blueberry Smoothie V4.0:</h1>
<h3>(each new version usually tastes worse for the sake of being more healthy)</h3>
<ul>
	<li>One cup of frozen blueberries</li>
	<li>One banana</li>
	<li>One scoop of protein powder</li>
	<li>3 Tbs of ground organic flax seeds
<ul>
	<li>Flax seeds are extremely good sources of Omega-3 fatty acids, fiber, and other vitamins / minerals. For more details click <a href="http://lowcarbdiets.about.com/od/whattoeat/a/flaxinfo.htm">here</a>.</li>
	<li>Remember that you cannot digest whole flax seeds so either buy them ground, or get a coffee grinder if you buy whole ones. I mistakenly bought whole ones so I needed a coffee grinder. But it turns out to be cheaper in the long run if you ground your own. Grounded seeds are almost double the price and don&#8217;t have the same shelf life.</li>
	<li><a href="http://www.amazon.com/gp/product/B000ED7M2W/ref=as_li_tf_tl?ie=UTF8&amp;tag=liohac-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000ED7M2W">Bob&#8217;s Red Mill Organic Whole Flaxseed Brown, 24-Ounce Packages (Pack of 4)</a><img style="border: none !important; margin: 0px !important;" src="http://www.assoc-amazon.com/e/ir?t=liohac-20&amp;l=as2&amp;o=1&amp;a=B000ED7M2W" alt="" width="1" height="1" border="0" /></li>
</ul>
</li>
	<li>One cup of raw broccoli
<ul>
	<li>Just added this today and I have to say, even blended up it&#8217;s hard to stomach. I&#8217;ll see if I can adjust to it after a week and if I can&#8217;t, I&#8217;ll have to steam it with the hot water pitcher.</li>
	<li>Broccoli is another superfood which helps with strong bones, cancer prevention, healthy hemoglobin and iron levels and healthy sight. Raw broccoli is said to provide extra benefits to your stomach lining and digestion.</li>
</ul>
</li>
	<li>One scoop of pro-biotic green&#8217;s mix</li>
	<li>One cup of almond milk</li>
	<li>One cup of filtered water</li>
</ul>
I removed the ice to help with digestion. Digesting anything cold slows down your digestion. Again, V4.0 tastes much much worse than V1.0, but it&#8217;s healthier for you. And if you drink it enough, your body/taste buds will acclimate and it won&#8217;t taste so bad.. hopefully.

Please let me know if you try this out and what new variations you like! I&#8217;m always testing new fruits and additions to it! Let me know what you think below! Just installed a new commenting system which makes it easy for Fb, Tw, Goog, etc. Cheers!
<h1>Morning Blueberry Smoothie V4.1 (8/5/2012):</h1>
<ul>
	<li>One cup of frozen blueberries</li>
	<li>One banana</li>
	<li>One scoop of protein powder</li>
	<li>3 Tbs of ground organic flax seeds</li>
	<li>Three leaves of kale</li>
	<li>Three frozen strawberries</li>
	<li>1 Tbs of all natural peanut butter</li>
	<li>One scoop of pro-biotic green&#8217;s mix</li>
	<li>One cup of almond milk</li>
	<li>One cup of filtered water</li>
</ul>
<div>The shake has enough calories now that I split it into two meals. So this basically covers breakfast and lunch.</div>
<div></div>
<div><a href="http://recipes.sparkpeople.com/recipe-calories.asp?recipe=2049618">These are roughly the nutrition facts</a></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Excerpt from Brad Blanton's Radical Honesty]]></title>
    <link href="http://guymorita.github.io//github/2012/03/excerpt-from-brad-blantons-radical-honesty/"/>
    <updated>2012-03-22T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/03/excerpt-from-brad-blantons-radical-honesty</id>
    <content type="html"><![CDATA[<blockquote>
<div>Because of being lost in our own minds we fail to recognize that truth changes. When the truth changes and we fail to recognize what has now become true, while holding on to the idea of what used to be true, we become liars committing suicide. If at 8pm I am mad at you and get quite worked up over it and you get mad back, but we talk about it. And we stay committed to the conversation and to the possibility of getting over our anger, there is a good chance that by 8:45pm, we can laugh, have a drink and not be angry anymore. It was true that I hated your guts at 8pm. It was no longer true somewhere between 8:20pm and 8:45pm. In contrast, people who live according to principles like I hated you then and for good reason so I still hate you now, can&#8217;t get over things.</div></blockquote>
<blockquote>
<div>This is reasonable, but stupid. I&#8217;ve seen a lot of reasonably stupid people in my life. Life goes on and the truth changes. This just happens to be the way life is. What was once true is often no longer true just a little while later. Yesterday&#8217;s truth is today&#8217;s bullshit. Even yesterday&#8217;s liberating insight is today&#8217;s jail of stale explanation. Roles and rules are also thoughts which when grasped on to as principles are hard for people to get over, or get beyond, or let change. People choke the life out of themselves by tying themselves to a chosen self image, any self-image whatsoever. Many adults remain in a perpetual adolescence locked in the protective confinement of a limited set of roles and rules.</div></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lessons from a young entrepreneur (Part 1 of 3)]]></title>
    <link href="http://guymorita.github.io//github/2012/03/lessons-from-a-young-entrepreneur/"/>
    <updated>2012-03-15T00:00:00-07:00</updated>
    <id>http://guymorita.github.io//github/2012/03/lessons-from-a-young-entrepreneur</id>
    <content type="html"><![CDATA[The last 2 years of my professional life were almost completely devoted to building a company. The experience has been nothing short of surreal with swings up and down that resemble a roller coaster ride. The business which I started with less than $1,000 and no funding, grew to over $700,000 in revenue and created over 16 full-time jobs worldwide in 4 countries. Not the fastest growth that’s ever been seen, but certainly not the slowest.

Instead of thinking of the situation as a success or failure, I’ve treated the experience as a series of lessons. These lessons I’d like to share so that hopefully others can learn or refine these ideas and get value from them. All are from my personal experience and should be taken with a grain of salt.

Most of these lessons will have a business focus, but many of these principles are equally important in building strong relationships as they are in business. One small note is that many of these will sound very simple and they are. It’s not the knowing of them that I found important, it’s the internalization of the idea into something that you carryout unconsciously. And in my case, that only happened after I experienced it firsthand. I’ve cut it down to the twelve ideas I found most important but I could go on with dozens more:
<div>
<h2>Create massive value</h2>
</div>
This is the core idea that I’m still working on internalizing. The sole purpose of a business is to create value for its customers. The extent to which the company doesn’t create value is the extent to which the company shouldn’t even exist.

As a business owner, I was bombarded with sales/marketing problems, employee issues, office logistics, workflow problems, IT problems and everything else under the sun. On many occasions I lost sight of the fact that the only reason the company existed was to create an amazing customer experience. I valued the details of the contracts signed, the budget we were aiming to achieve, or even employee happiness over our own customer’s satisfaction. Delivering a great customer experience should be the staple behind every business decision and certainly behind the mission/vision. If you have a process that creates happy customers and a business model which makes money, so much the better. If you don&#8217;t create happy customers and you make money, there are bound to be problems.

Another lesson from this is that if it comes between your customer’s happiness and your employee’s happiness, the former is more important. Ideally you can have both, but often times a decision has to be made which favors one over the other.
<div>
<h2>Trust, but verify</h2>
</div>
These are words from President Ronald Reagan. This lesson has been beat into my head more times than I can count. I experienced this with the sales director whom I had brought on to lead our sales team. When I initially brought him on, I was extremely happy with his performance. He created structure and processes that effectively drove the sales team. I trusted him to take the company’s best interest. I trusted too much and didn’t verify. Months into his employment cracks started to show. I saw contracts which were put together improperly; overpromising that had taken place and lastly, his attendance became sporadic as a result of his personal problem with crack cocaine.

Every entrepreneur should fully believe in his/her team’s abilities to carry out the vision; however, checks/balances need to be put in place to verify whether that trust is warranted. Empathize with what your team says, but see how their intentions match up to their actions.
<div>
<h2>Psychology is important</h2>
</div>
One of the most interesting things I’ve learned this year is about the brain. According to Truine Brain Theory, we actually have three brains, not just one. Each of which was developed on top of an older one. Our first is the reptilian brain responsible for basic life functions like voluntary motor function, eye movement, and other essential survival instincts. Next is the limbic brain (aka the emotional brain) responsible for motivation and emotion. And lastly, the neocortex (aka the logical/rational brain) which gives us the ability to confer language, create abstract thoughts, plan and perceive.

This is interesting for two reasons. First, the older brains always take priority over the newer ones. This means that your survival instincts found in your spinal column and reptilian brain, overpower the demands of your logic and emotion. So this is why if you see a car that’s about to hit you, your body automatically goes into survival mode, your senses heighten, and you unconsciously scramble for safety. Second and more interestingly is the fact that the emotional brain takes precedence over the logical brain. This is why we give into our compulsive shopping habits, burst out at a loved one and say things we don’t mean, or perform poorly when we knew exactly how to execute. For our logical mind to operate at peak performance, our emotional mind has to be positive and in a good state. If our emotions are out of whack, stressed, or negative, it literally makes us unable to think logically because our emotional brain takes precedence over our logical brain. Another way to put it is that “stress makes you stupid”.

When working as a CEO or as any role with a lot of accountability, remember that managing stress is just as important as anything else. For if your emotional brain becomes flooded with stress/negativity/anger, your rational brain freezes up and can’t make logical decisions.

This also has a lot of ties to work-life balance. Even though I was putting in 80+ hour weeks and sleeping in the office on occasion, I still forced myself to let go on Saturday and enjoy my personal life. I surely could not have made it as far as I did if I ignored my personal needs to relax and enjoy hanging out with my friends.

Though life can get extremely stressful at times, I think it&#8217;s important to remember that almost all our stress is put in place from our modern social structure. If we take a brief look at Maslow&#8217;s hierarchy, most people in the first world don&#8217;t even have to worry about the bottom three layers. We don&#8217;t have much to truly worry and stress about.
<div>
<h2>Look out for yourself</h2>
</div>
No one in the company is ever going to have the same perspective as the owner(s). Empathize with your team and understand their concerns; but realize that their motivations are likely much different than yours. Employees will never feel the full effect of all the liabilities, responsibilities, and accountabilities that the owners face. Realizing this helped me make many of the tough decisions when the team was in disagreement.

Solid leadership, equity incentives, aligned values and a clear vision can help to lessen the difference; however a small amount is likely to always be there.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to sell everything you own and move to a new city in 4 weeks without a job lined up]]></title>
    <link href="http://guymorita.github.io//github/2012/03/how-to-sell-everything-you-own-and-move-to-a-new-city-in-4-weeks-without-a-job-lined-up/"/>
    <updated>2012-03-11T00:00:00-08:00</updated>
    <id>http://guymorita.github.io//github/2012/03/how-to-sell-everything-you-own-and-move-to-a-new-city-in-4-weeks-without-a-job-lined-up</id>
    <content type="html"><![CDATA[I recently moved to SF on the 1st of March and it&#8217;s been the best experience I could have asked for. But before moving here I had to make a whole bunch of tough decisions and was honestly pretty damn stressed out and nervous about the whole thing. As some of you already may know I still own my web marketing / social media company and have 4 employees in asia; however at this point it&#8217;s only breaking even so I effectively don&#8217;t have income.

Below is an overview of my thought process in making the decision, some of the emotions I went through and some tips on how to actually get it done if you&#8217;re interested.

<strong>Making the decision:</strong>

This is easily the hardest part of the process. To make the final decision you have to come to terms with the fact that you cannot possibly know how things will work out (especially if you don&#8217;t have a job lined up). I feel people typically try to plan very linearly. Apply for x amount of jobs, get y number of interviews, get z number of offers and take the best one. While it is absolutely essential to put yourself out there and apply / send out cold emails, it&#8217;s likely that you won&#8217;t get absolute certainty on how things are going to work out. Unless you are lucky enough to get recruited from out-of-state. But even then, is that lucky? Or would it have been better to just show up in the city and throw yourself out there? I think there is a lot of value in just making the leap at the risk of hitting rock bottom. It requires a very high amount of self-trust and faith in yourself and that&#8217;s what moving forward and change is all about. I can say from personal experience that I&#8217;ve hit rock bottom many many times. And as &#8220;woo woo&#8221; as it sounds, I think they&#8217;ve all been extremely critical learning experiences. And as my cousin Lauren would say &#8220;everything happens for a reason&#8221;. I used to think that statement was a passive way of explaining life, but the more experiences I have, the more I see the dots behind me are actually connecting quite well.

At some level you just have to have faith that things will work out. Realistically what is the worst thing that can happen? In all likeliness you probably have a 99.999% chance that tomorrow you are going to be alive, have shelter and have food on your table. So how bad can things really be?

Back to the point. In terms of what items you might want to consider in the decision, I&#8217;d break it down to:
<ul>
	<li>Why do you want to leave? At its core, I think it&#8217;s important to recognize that you want to leave because you want <strong>change</strong> in your life. You want to see new places, make more money, do new things, experience different cultures, etc. And inherently, change means doing things differently. If you continued to &#8220;be yourself&#8221; and you did all the same things you&#8217;ve been doing, you&#8217;d be exactly the same a year from now. If you break off from all the habits and material that you identify with and look forward, you can begin to shape/craft new ones for the person you want to become. And this, unfortunately, means &#8220;not being yourself&#8221;. Break out of your comfort zone. Change inherently requires you to not be yourself. Change is why you want to leave.</li>
	<li>Why do you want to live in the new city? Even though I&#8217;ve traveled around the world and seen a lot of different cultures, I can&#8217;t express enough how impossible it is to see the value of living in another city <strong>until</strong> you&#8217;ve actually done it. There is simply no substitute. I had visited SF at least 4 times before but I never truly understood the value of being here until I actually settled in on March 1st. At some level you just have to pick a city that has a culture of what you want to become and make the leap. It&#8217;s that simple.</li>
	<li>Do you have friends / connections in the city? I love the city of Seattle and I love the city of San Francisco. And what I truly mean by that is that I love the people in Seattle and I love the people in San Francisco. A city without people isn&#8217;t a whole lot. The people make the city. This probably comes down to personal preference but if you want to lessen the emotional shock of moving to a new city, it might be easier to pick one where you know a few people.</li>
	<li>How&#8217;s the weather? Just going to be honest, I think it&#8217;s much easier to stay positive and upbeat when living in a place with nice weather. Sunshine and warmth just brings out positive and happy emotions. It&#8217;s a fact.</li>
	<li>How much runway to you have financially? Everyone has a different requirements on how much money they&#8217;ll need to live in a new city. If you have a friend, whose couch you can crash on, it would make things much easier. If that&#8217;s not an option hostels, couchsurfing, or airbnb could be temporary options while you just get settled in. In most major cities in the US it&#8217;s pretty easy to find a living situation on craigslist. Sublet or otherwise. One factor to consider is that the less money you move with the more stressed out you&#8217;re likely to get. Negative stress can be a very bad thing. But even in the worst case, it isn&#8217;t that hard to find a temp job such as a server, busser, or bartender where you can make $15-$25/hour while you figure things out.</li>
</ul>
<strong>Handling your emotions:</strong>

As you may be able to tell, I write to myself a lot. In the months prior to now I was not feeling very confident after winding down my company and I had to convince myself that things would work out. Even in the weeks before moving I felt very anxious and nervous about the move. Again, I think it is a good thing to try and internalize the idea that looking forward your life is not going to pan out very linearly. As much as you might want certainty, certainty doesn&#8217;t exist. It&#8217;s an illusion. No one knows what will happen tomorrow or next year. So chill out, work your ass off in growing in the areas you want to change and <strong>trust</strong> that things will work out for the best. That&#8217;s about all we can do.

Couple things to consider:
<ul>
	<li>If you ask for advice from your friends/family in terms of whether or not you should leave, understand the frame they&#8217;re coming from. If they have an extremely stable situation in the city you&#8217;re in and don&#8217;t like change, they&#8217;re likely going to tell you to stay. Or just give you potentially unhelpful or negative advice. If the friend is living in another city, they may be able to provide better perspective.</li>
	<li>In the weeks prior to leaving I was selling off everything I owned and was busy probably 16 hours a day (I had way too much stuff). It was like a space shuttle taking off and I was burning massive amounts of fuel (figuratively) just to move a couple miles. But now that I&#8217;m in the new city, it truly does feel like I broke out of the atmosphere. I finally reached escape velocity.</li>
</ul>
<strong>How to get it done&#8230; now now now:</strong>

I have made a habit to trying to push my friends to try new experiences both in regards to business/career and personal. I often use the term &#8220;now now now&#8221; to express the fact that action needs to take place now. Not planning. Not action tomorrow. Action today. Today. Today. Now. Now. Now. Here are some tips that I&#8217;ll give for how to actually sell everything you own and move:
<ol>
	<li>You may want to consider visiting the city first for an extended period of time (a week or so) just to test out the waters. This is what I did but it&#8217;s certainly not necessary. I do think it&#8217;s important to feel that you can make both your professional/career side work out <strong>as well as</strong> your personal life. And any experience or knowledge that can help you understand that better I think is invaluable.</li>
	<li>Set goals and create social contracts with friends. I sat down with a Gar (little) and wrote out our deadlines for the month on blank calendar paper. If I didn&#8217;t hit certain goal when I said I would, I agreed to pay him $50. Or donate it to an organization I strongly disliked. It just needs to be enough to incentivize you to get your stuff done on time.</li>
	<li>In terms of selling all your stuff, I took pictures of everything I owned. I took 121 pictures in total and posted them to Google Picasa Albums. I then tagged each item based on what I wanted to do with it. I tagged 36 items to give to Goodwill or to friends, 25 items to sell on craigslist/ebay, 21 items to give to my mom in Portland, 5 items to give to my grandma in Tacoma, 4 items to bring with me to SF (clothes, blender, 7 sets of headphones, laptop), 4 items to return to stores (which I never got around to doing, I ended up giving them to Goodwill), 4 items to throw away, 3 items to decide later (which I ended up giving away), and 2 items to sell later (this included my car which I only started trying to sell 2 weeks before I left, bad choice).</li>
	<li>After I had all my stuff tagged and organized, I just went through each tagged section and began taking care of business. I probably delivered 8-10 trash bags of clothes to Goodwill. I rented a U-Haul for 2 days, filled it with my stuff and drove half down to Tacoma for my grandma and half to my mom in Portland. I then dropped the U-Haul in Portland and took an Amtrak train back home.</li>
	<li>Selling your car can be a chicken or the egg problem. A lot of last minute errands are much easier with a car, but if you want to move without your car, you obviously have to sell it before you leave. I waited till about 2 weeks before I was leaving before trying to sell mine and it made it very difficult to get the price I wanted. It depends on your car and the market in your city, but just plan accordingly.</li>
	<li>Buy a one-way ticket of some kind (train, bus, plane, whatever) when you make your decision. This I think is one of the most important steps. I bought my one-way ticket after I tested out the city for a week. I bought the ticket on Feburary 2nd for my flight which was on March 1st. This gave me a real deadline which I couldn&#8217;t avoid or postpone. This is another great way of incentivizing you to stay on track.</li>
	<li>Plan time to clean your apartment or house that you&#8217;re moving out of. Depending on the size of it, I would probably allot 10-12 hours just to be safe. Assuming all your stuff is already out. It&#8217;s much better to have too much time than too little in this arena.</li>
	<li>Lease? In my case I had a 2-person lease which didn&#8217;t end until June 30th (4 months after I wanted to leave). This can be an extremely sticky area, mostly because there is someone else involved. I did not handle this as well as I should have. All I can recommend is that you should try to be as considerate and honest as possible with your roommate(s) and landlord. That said, understanding game theory and their motivations might also be good.</li>
	<li>Clear up all your banking and mail accounts. Setup your address forwarding. If you need to close any local accounts, take care of it.</li>
	<li>If you have last minute stuff you need to get rid of, craigslist is still an amazing resource. I posted my scanner on it for free and got 70 emails in 24 hours. There are plenty of people looking to get free stuff.</li>
	<li>You will likely have more you want to bring with you than can fit in the two luggage. I would suggest moving boxes. Do not go to storage stores to buy your moving supplies. To say they are a rip-off would be an understatement. I went to one where they were selling 20x20x22 boxes for $4.50 and a sign outside said &#8220;30% off boxes!!&#8221;. Which was only for large quantity purchases. Both home depot and lowes sell the same size boxes for ~$1.30 and no quantity requirements. More than 70% less. Airports and UPS typically prefer you to ship boxes that sum up to ~62 inches (W+H+D). If you aren&#8217;t driving the boxes down, you can either send them USPS or get UPS to schedule a pick up.</li>
	<li>Last but not least, get together with a group of friends and pop a celebratory bottle of champagne. =)</li>
</ol>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wisdom from Brian Sharp]]></title>
    <link href="http://guymorita.github.io//github/2012/03/wisdom-from-brian-sharp/"/>
    <updated>2012-03-10T00:00:00-08:00</updated>
    <id>http://guymorita.github.io//github/2012/03/wisdom-from-brian-sharp</id>
    <content type="html"><![CDATA[I heard one of the most inspiring and insightful speeches of my life yesterday at GDC. So much of it, namely the end, was pure gold. I not only left having learned tons of lessons on how to better manage and build relationships, but with the internalization of his lessons which is something only a truly gifted speaker can do. The speech was from Brian Sharp, Lead Engineer at Bungie. It is easily one of the best speeches I have ever been had the pleasure of sitting in on. It stands even alongside that of Steve Job&#8217;s Stanford Commencement Speech. It was clear from the start that he was one of the most intelligent and gifted individuals I&#8217;ve been in the presence of. Feel free to skip to the bottom if you want to read a transcript of the ending of his speech.

The title for his speech was &#8220;Concrete Practices to Be a Better Leader: Framing &amp; Intention&#8221;. The takeaway was meant to be giving listeners concrete techniques to increase their awareness of frames, to use framing as a tool in more effective conversations, to increase their awareness of the intentions behind their actions and to sculpt that intention into a positive one that will make them &amp; everyone around them happier. I left not only having learned many lessons on intention and framing that will be invaluable in management but also with a lasting emotion and connection with the speaker. He spoke with such truth and sincerity it was almost like poetry. His passion not only for his work but also for people came through in every word.

The first half of the speech was more about techniques for framing various situations in and out of the workplace. The second half was about wisdom.

A frame is a context, collection of assumptions and a perspective. And it&#8217;s important to recognize that every situation and statement we&#8217;ve ever heard has a frame. And that only behind that frame is the truth. Framing itself isn&#8217;t inherently good or bad, it&#8217;s just the nature of language and people. He gave the example of the Asian Disease Problem. To read a brief overview click <a href="http://epse501.freeservers.com/asian-disease.html" target="_blank">here</a>.

http://www.lionhacks.com/wp-content/uploads/2012/03/brian-sharp.jpg

This is an interesting study because it shows how people prefer a sure gain over a gamble yet prefer a gamble over a sure loss. Even though the true outcomes are the same.

The insight is that frames can distort our view of an issue and that there is no such thing as an unframed problem. People are frame bound, not reality bound. And we need to make sure that whenever we hear something we also hear it&#8217;s frame.

He then went on to talk about how to use frames in collaborative and hierarchical work environments which was very interesting. But the most insightful pieces I believe was when he began talking about caring for others. How many times in office environments, managers might say they care about &#8220;you&#8221;, when what they actually care about (as spoken through their actions) is your &#8220;work result&#8221; or to &#8220;make you happy enough so that you don&#8217;t quit&#8221;. Having run my own company, it is sad to say that I fell into this trap too. And no matter what great the incentives or compensation you offer, if it shines through that your true care is the work result, your team will not only lose motivation, they will also lose faith in you as their leader. To be a great manager and to show that you truly care for your team as people, you can&#8217;t always be in a work frame. If all you talk to them about is work, you won&#8217;t truly know them as people.

Here is a brief transcript of the second half of his speech. As I said in the start, it is pure gold:
<blockquote>Communication is a craft like any other. But unlike other crafts, it&#8217;s one of few mediums where we are inherently shaping and refining each other. Communication teaches us the true nature of people. And when people use words for bad, we should not feel contempt, but rather compassion.

I think it&#8217;s easy to feel anger and contempt for these people. And we when we have to work directly with them we can feel threatened, we can feel upset. But perhaps we should instead feel compassion. When we learn a craft, every moment of that learning is an opportunity to open our eyes to great beauty. When I was a child and I didn&#8217;t know anything about woodworking; I looked at a peace of furniture and all I saw was the utility. This one&#8217;s for holding books, that one is for holding clothes. Practicing woodworking opened my eyes, now I see the utility but also the care and the craftsmanship. The beauty of the wood itself and even a little bit of camaraderie for the person who made it thinking that this section must have been really difficult. Or admiring the quality of a specific joint.

That appreciation, that ability to encounter something and see not just the outer surface of the thing, but also the time and love and care that it&#8217;s made of. That, is our sensitivity to all of the beauty and joy and love in the world.

There is one catch, our practice will teach us nothing unless we bring our attention to those moments. We have to be willing to see. We have to let the experience change us. If we practice carelessly then our eyes remain closed. And so while it&#8217;s frustrating to see a communicator who uses his words for harm or to climb ladders or earn a bonus at someone else&#8217;s expense; when my mind is open I look at a person like that and it breaks my heart.

To have such skill with words. He must have practiced for so long. And the whole time he had such opportunity.  To see the beauty in it. To see the beauty in himself. And the joy in relationships, but he didn&#8217;t. You can&#8217;t explain those kinds of things to someone who doesn&#8217;t see, it&#8217;s like trying to explain color to someone who is blind from birth. So he doesn&#8217;t even know what he is missing. He thinks the goal is acquisition.  Tries to fill life with material wealth because that&#8217;s all he knows.

If you find yourself working with someone like this I might humbly suggest a little meditation to develop compassion. It goes like this. When we do not know happiness and we try to fill it&#8217;s void with pleasure, we suffer.

Communication and the study of human interaction is a craft that opens our eyes. What exactly does it open our eyes to? Well just like woodworking taught me deeply the nature of the wood, communication teaches us the true nature of people and the more we know something the genuinely we are able to love it. At the end of the day I think some of our aversion to this analysis is that subconsciously part of us doesn&#8217;t want to see our true nature. We don&#8217;t like the idea that we can be manipulated. And that someone else can trick us with the simple wording of a question. We want to believe that our preferences are rational and well considered. And that our behavior is governed by reason. But these things are not true. And believing them does us no more good than it would a woodworker to pretend that wood cannot burn or cannot be broken.

We are creatures you and I and these are our vulnerabilities.

We are afraid of vulnerability but it is the truth of our nature and only when we acknowledge it can we truly love each other.

The more we practice, the more we start to see how much of our interaction with each other are these ways of staying safe. They are nothing but boiler plate, habit, neurosis. Polite strategies for saying the right things but keeping our distance. The power of this work is that seeing gives us a choice. We can choose not to respond with a boiler plate. We can choose to respond with sincerity. We can choose connection. And that&#8217;s why I believe so strongly in the value of this work.

And if something I&#8217;ve said this afternoon was helpful to you, thank you very much for listening.</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jousting at GDC!]]></title>
    <link href="http://guymorita.github.io//github/2012/03/jousting-at-gdc/"/>
    <updated>2012-03-09T00:00:00-08:00</updated>
    <id>http://guymorita.github.io//github/2012/03/jousting-at-gdc</id>
    <content type="html"><![CDATA[Since moving to SF a week ago, I&#8217;ve been having the time of my life. If I&#8217;m only running on 4-hours of sleep a night, I must be right? A new friend of mine, Steven Tran, is the marketing coordinator for the Game Developers Conference which centers around game development, sharing tools, tips and technologies for unbridled professional learning, networking and gaming fun!

Easily one of my favorite games was a music based game (no screen or visuals) called <em><strong>Johann Sebastian Joust</strong></em>. Might I add that it was nominated and won the Innovation Award at the IGF. Here is the description from the site:
<blockquote>The goal is to be the last player remaining. When the music — selections from J.S. Bach&#8217;s &#8221;<a href="http://en.wikipedia.org/wiki/Brandenburg_concertos">Brandenburg Concertos</a>&#8221; — plays in slow-motion, the controllers are extremely sensitive to movement. When the music speeds up, this threshold becomes less strict, giving the players a small window to dash at their opponents. If your controller is ever moved beyond the allowable threshold, you&#8217;re out! Channel the power of J.S. Bach, and try to jostle your opponents&#8217; controllers while protecting your own.</blockquote>
The game even evolved as I attended the conference because on the first day players were much more aloof to any strategy. By my fourth game I was able to stealthy circle the entire group and blow their controller up to become the last man standing (and laughing, muahahha). But by the second day, the players lowered their stances and frankly got a lot more pushy.

Anyway, this was one of my favorite games in the conference and I really appreciated the abstractness of playing a console game showcasing music with no visuals! Try it if you get the chance!!

<strong>Sweet smell of Victory!</strong>

<a href="http://www.lionhacks.com/wp-content/uploads/2012/03/2012-03-07-12.42.58.jpg"><img class="alignnone size-medium wp-image-21" title="Muahahahaha - The Sweet Smell of Victory!!" src="http://www.lionhacks.com/wp-content/uploads/2012/03/2012-03-07-12.42.58-300x225.jpg" alt="" width="300" height="225" /></a>

<a ahref="http://www.youtube.com/embed/Aj4prnxw41w?rel=0"></a>

From the <a href="http://www.jsjoust.com" target="_blank">official site (<cite>js<strong>joust</strong>.com</cite>)</a>:

<a href="http://www.lionhacks.com/wp-content/uploads/2012/03/joust3.jpg"><img class="alignnone size-medium wp-image-30" title="Jousting!" src="http://www.lionhacks.com/wp-content/uploads/2012/03/joust3-300x200.jpg" alt="" width="300" height="200" /></a>
]]></content>
  </entry>
  
</feed>
